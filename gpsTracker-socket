 
server = argv[1];
port = (int) argv[2];
timeout = (int) argv[3];
SERIAL = struct_get(nb_status("system"), "SERIAL_NUMBER");


sock = -1;

int initSocket(){
    sock = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
    if (sock < 0) {
        print("unable to open socket\n");
        exit(1);
    }
    
    if (connect(sock, server, port) < 0){
        printf("Could not connect to %s (port %d) Retry!\n", server, port);
        sleep(5);
        initSocket(); 
    }
    return sock;
}




void loop(){
    sock = initSocket();
    while(1) {
        status = nb_status("gnss");
        lat = struct_get(status, "GNSS1_LATITUDE");
        lon = struct_get(status, "GNSS1_LONGITUDE");

        messageToSent = sprintf('{"device_id": "%s", "lat": "%s", "long": "%s"}', SERIAL, lat, lon);

        //printf("message %s", messageToSent);

        sent = send(sock, messageToSent);
        if (sent == -1) {
            printf("Failed to send message\n");
            sock = initSocket();
        } 
        printf("Sent %d bytes\n", sent);

        sleep(timeout);
    } 
}


close(sock);

loop();

 
exit(0);